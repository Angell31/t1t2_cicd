name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Set up Docker Buildx (for building multi-platform images if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      # 3. Set up Node.js environment (to run npm commands)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # 4. Install dependencies
      - name: Install dependencies
        run: npm install

      # 5. Run tests (optional, you can skip if not needed)
      - name: Run tests
        run: echo "Tests runned."

      # 6. Build Docker image
      - name: Build Docker image
        run: docker build -t my-node-app .

      # 7. Verify the Docker image was created
      - name: List Docker images
        run: docker images

      # 8. Security scan with Trivy
      - name: Scan Docker image with Trivy for vulnerabilities
        run: |
          # Install Trivy
          curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.34.0/trivy_0.34.0_Linux-64bit.tar.gz | tar -xzv
          sudo mv trivy /usr/local/bin/

          # Run Trivy scan on the Docker image
          trivy image --exit-code 1 --severity HIGH,CRITICAL my-node-app || true

      # 9. Authenticate to Google Cloud
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.8
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # 10. Configure Docker to use GCR
      - name: Configure Docker to use GCR
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      # 11. Tag Docker image with GCR registry
      - name: Tag Docker image
        run: |
          docker tag my-node-app us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/github-actions-repo/my_node_app:${{ github.sha }}

      # 12. Push Docker image to GCR
      - name: Push Docker image to GCR
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/github-actions-repo/my_node_app:${{ github.sha }}

      # 13. Install the Google Cloud SDK
      - name: Install Google Cloud SDK
        run: |
          echo "Installing Google Cloud SDK"
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg > /dev/null
          sudo apt-get update && sudo apt-get install -y google-cloud-sdk

      # 14. Install the GKE Authentication Plugin
      - name: Install GKE Authentication Plugin
        run: |
          sudo apt-get install google-cloud-sdk-gke-gcloud-auth-plugin

      # 15. Configure kubectl to interact with GKE
      - name: Configure kubectl to interact with GKE
        run: |
            gcloud container clusters get-credentials my-cluster --zone us-central1-c --project ${{ secrets.GCP_PROJECT_ID }}

      # 16. Deploy Docker image to GKE
      - name: Deploy to GKE
        run: |
            kubectl set image deployment/my-deployment my-container=us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/github-actions-repo/my_node_app:${{ github.sha }}
            kubectl rollout status deployment/my-deployment
